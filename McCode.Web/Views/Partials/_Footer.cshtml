@inherits UmbracoViewPage
@using Danva.Web.Models.ComponentModels
@using Our.Umbraco.LinksPicker.Models

@{

    var website = Model.AncestorOrSelf<Website>();
    var footer = website.Layout;

}

<footer class="page-footer">
    <div class="container">
        <div class="container">
            <div class="row">
                <div class="col-xs-12">
                        <div class="line-border-thin-skew"></div>
                    <div class="footer-head">
                        @if (!string.IsNullOrEmpty(website.Logo))
                        {
                            <div class="footer-logo">
                                @Html.Raw(website.Logo)
                            </div>
                        }
                        @Html.CachedPartial(
                            "Components/_SoMe",
                            new SoMeViewModel
                            {
                                TwitterUrl = website.TwitterLink,
                                FacebookUrl = website.FacebookLink,
                                YouTubeUrl = website.YoutubeLink
                            },
                            3600
                       )
                    </div>
                </div>
            </div>
            <div class="row">
                @foreach(var item in footer)
                {
                    <div class="col-xs-12 col-sm-6 col-md-3 flex">
                        @switch (item.DocumentTypeAlias)
                        {
                            case "multipleLinks":
                                @renderLinks(item) break;

                            default:
                                @renderRte(item) break;
                        }
                    </div>
                }
            </div>
            <div class="row">
                <div class="col-xs-12">
                    <div class="sub-footer">
                        <div class="line-border-thin-skew"></div>
                        @Html.Raw(website.SubFooter)
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

@helper renderLinks(IPublishedContent multipleLinks)
{
    var links = multipleLinks
        .GetPropertyValue("links", Enumerable.Empty<LinksPickerItem>()) ;

    <div class="footer-links">
        @if (multipleLinks.HasValue("headline"))
        {
            <h5>@Html.Raw(multipleLinks.GetPropertyValue<string>("headline"))</h5>
        }
        @if(links.Any())
        {
            <ul class="list-unstyled">
                @foreach(var link in links)
                {
                    <li><a href="@link.Url" target="@link.Target">@link.Name</a></li>
                }
            </ul>
        }
    </div>
}

@helper renderRte(IPublishedContent rte)
{
    if(rte.HasValue("rte"))
    {
        <div class="footer-rte">
            @Html.Raw(rte.GetPropertyValue<IHtmlString>("rte", null))
        </div>
    }
}