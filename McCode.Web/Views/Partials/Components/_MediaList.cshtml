@inherits UmbracoViewPage<MediaListViewModel>

@{
    var list = Model.MediaList;
}

@if (list != null && list.Any())
{

    switch (Model.ViewRenderMode)
    {
        case ViewRenderMode.EnableBootstrap:
            @renderListWithBootstrap(list); break;

        default:
            @renderList(list); break;

    }
}

@helper renderList(IEnumerable<IPublishedContent> list)
{
<div class="media-list @(Model.MedialistClassModifier)">
    @foreach (var item in list)
    {
        {
            Html.RenderPartial(
                "Components/_Card",
                new CardViewModel(
                    item,
                    showLead: Model.ShowLead,
                    showTitle: Model.ShowTitle,
                    showImage: Model.ShowImage)
                {
                    TypedWidth = Model.TypedWidth,
                    GridSettings = Model.GridSettings,
                    MediaHeights = Model.MediaHeights,
                    ClassModifier = Model.CardClassModifier,
                    EnableImageFallback = Model.EnableImageFallback
                });
        }
    }
</div>
}

@helper renderListWithBootstrap(IEnumerable<IPublishedContent> list)
{
    var gridSettings = Model.GridSettings;
    <div class="row flex-box media-list @(Model.MedialistClassModifier)">
        @foreach (var item in list)
    {
            <div class="col-xs-@(gridSettings.GridXs) col-ms-@(gridSettings.GridMs) col-sm-@(gridSettings.GridSm) col-md-@(gridSettings.GridMd) col-lg-@(gridSettings.GridLg) col-xl-@(gridSettings.GridXl) col-xxl-@(gridSettings.GridXxl)">
                @{ Html.RenderPartial(
              "Components/_Card",
              new CardViewModel(
                  item,
                  showLead: Model.ShowLead,
                  showTitle: Model.ShowTitle,
                  showImage: Model.ShowImage)
              {
                  ClassModifier = Model.CardClassModifier,
                  TypedWidth = Model.TypedWidth,
                  GridSettings = gridSettings,
                  MediaHeights = Model.MediaHeights,
                  EnableImageFallback = Model.EnableImageFallback
              }); }
            </div>
        }
    </div>
}
