@inherits UmbracoViewPage<MediaViewModel>
@using Our.Umbraco.Picture
@{ 
    var image = Model.Image;
    var mediaHeigts = Model.MediaHeights;
    var gridSettings = Model.GridSettings;
}

@if(image != null && Model.TypedWidth > 0)
{
    @renderTypedMedia(image, gridSettings, mediaHeigts)

} else if (image != null)
{
    @renderMedia(image, gridSettings, mediaHeigts)
}

@if(image == null && Model.EnableImageFallback)
{
    var fallbackFolder = Umbraco.TypedMedia(1210);
    var fallbackMedia = fallbackFolder != null ? fallbackFolder.Children() : null;
    if (fallbackMedia.Any())
    {
        var fallbackImage = fallbackMedia.RandomOrder().FirstOrDefault();
        @renderMedia(fallbackImage, gridSettings, mediaHeigts)
    }
}

@helper renderTypedMedia(IPublishedContent image, GridSettings gridSettings, MediaHeights mediaHeights)
{
var typedWidth = Model.TypedWidth;

var heightXs = mediaHeights.HeightXs;
var heightMs = mediaHeights.HeightMs > 0 ? mediaHeights.HeightMs : heightXs;
var heightSm = mediaHeights.HeightSm > 0 ? mediaHeights.HeightSm : heightMs;
var heightMd = mediaHeights.HeightMd > 0 ? mediaHeights.HeightMd : heightSm;
var heightLg = mediaHeights.HeightLg > 0 ? mediaHeights.HeightLg : heightMd;
var heightXl = mediaHeights.HeightXl > 0 ? mediaHeights.HeightXl : heightLg;

var picture = Umbraco.Picture(image)
.Source("(min-width:1440px)", ResizeImage(typedWidth, 12, 0), heightXl)
.Source("(min-width:1200px)", ResizeImage(typedWidth, 12, 0), heightLg)
.Source("(min-width:992px)", ResizeImage(typedWidth, 12, 0), heightMd)
.Source("(min-width:768px)", ResizeImage(typedWidth, 12, 0), heightSm)
.Source("(min-width:480px)", ResizeImage(typedWidth, 12, 0), heightXs)
.Srcset(ResizeImage(typedWidth, 12, 0), heightXs)
.Alt(image.Name);

    @Html.RenderPicture(picture);
}

@helper renderMedia(IPublishedContent image, GridSettings gridSettings, MediaHeights mediaHeights)
{
var gridXs = gridSettings.GridXs;
var gridMs = gridSettings.GridMs > 0 ? gridSettings.GridMs : gridXs;
var gridSm = gridSettings.GridSm > 0 ? gridSettings.GridSm : gridMs;
var gridMd = gridSettings.GridMd > 0 ? gridSettings.GridMd : gridSm;
var gridLg = gridSettings.GridLg > 0 ? gridSettings.GridLg : gridMd;
var gridXl = gridSettings.GridXl > 0 ? gridSettings.GridXl : gridLg;
var gridXxl = gridSettings.GridXxl > 0 ? gridSettings.GridXxl : gridXl;

var heightXs = mediaHeights.HeightXs;
var heightMs = mediaHeights.HeightMs > 0 ? mediaHeights.HeightMs : heightXs;
var heightSm = mediaHeights.HeightSm > 0 ? mediaHeights.HeightSm : heightMs;
var heightMd = mediaHeights.HeightMd > 0 ? mediaHeights.HeightMd : heightSm;
var heightLg = mediaHeights.HeightLg > 0 ? mediaHeights.HeightLg : heightMd;
var heightXl = mediaHeights.HeightXl > 0 ? mediaHeights.HeightXl : heightLg;

var picture = Umbraco.Picture(image)
.Source("(min-width:1440px)", ResizeImage(1600, gridXl, gridSettings.GridTotalPadding), heightXl)
.Source("(min-width:1200px)", ResizeImage(1440, gridLg, gridSettings.GridTotalPadding), heightLg)
.Source("(min-width:992px)", ResizeImage(1200, gridMd, gridSettings.GridTotalPadding), heightMd)
.Source("(min-width:768px)", ResizeImage(992, gridSm, gridSettings.GridTotalPadding), heightSm)
.Source("(min-width:480px)", ResizeImage(768, gridMs, gridSettings.GridTotalPadding), heightMs)
.Srcset(ResizeImage(480, gridXs, gridSettings.GridTotalPadding), heightXs)
.Alt(image.Name);

    @Html.RenderPicture(picture);
}

@functions {
    private int ResizeImage(int maxContainerSize, int gridSize, int gridGridTotalPadding)
    {
        int size = (((maxContainerSize / 12) + 2) * gridSize) - gridGridTotalPadding;
        return size;
    }
}