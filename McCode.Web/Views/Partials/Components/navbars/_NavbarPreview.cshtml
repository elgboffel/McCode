@inherits UmbracoViewPage
@using Umbraco.Web.PublishedContentModels
@using McCode.Web.Models.ComponentModels

@{
    Html.RequiresJs("~/scripts/app/components/navbar-preview.js", 1, 3, new { @defer = "" });

    var website = Model.AncestorOrSelf<Website>();

    var children = website.Children().Where(x => x.IsVisible());
}
<nav class="navbar-preview" role="navigation">
    <ul class="navbar-preview__breadcrumb">
        <li><a href="/">Hjem</a></li>
        <li class="navbar-preview__dropdown">
            <div class="navbar-preview__expander" data-placeholder="Se flere sider">
                Se andre sider <span class="arrow-down"></span>
                @if (children.Any())
                {
                    <ul>
                        @foreach (var child in children)
                        {
                            @RenderChild(child)
                        }                    
                    </ul>
                }
            </div>
        </li>
    </ul>
    <ul class="navbar-preview__menu">
        <li>
            <a href="">Moi</a>
        </li>
        <li>
            <a href="#">Kontakt</a>
        </li>
    </ul>
</nav>

@helper RenderChild(IPublishedContent child) {
    
    <li>
        <a href="@child.Url">@child.Name</a>
        <div class="navbar-preview__preview">
            <div class="navbar-preview__image">
                @Html.Partial(
                "Components/_Media",
                new MediaViewModel()
                {
                    Image = child.GetPropertyValue<IPublishedContent>("heroImage", null),
                    TypedWidth = 225,
                })
            </div>
            <div class="navbar-preview__content">
                <div class="navbar-preview__heading">@(child.GetPropertyValue<string>("headline", ""))</div>
                @if (child.HasValue("lead"))
                {
                    <div class="navbar-preview__lead">@(child.GetPropertyValue<string>("lead"))</div>
                }
            </div>
        </div>
    </li>

}
