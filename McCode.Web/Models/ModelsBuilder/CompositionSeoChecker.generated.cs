//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.5.96
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace McCode.Web.Models.ModelsBuilder
{
	// Mixin content Type 1136 with alias "CompositionSeoChecker"
	/// <summary>SEO Checker</summary>
	public partial interface ICompositionSeoChecker : IPublishedContent
	{
		/// <summary>#Meta-description</summary>
		string MetaDescription { get; }

		/// <summary>#Page Title</summary>
		string PageTitle { get; }

		/// <summary>#Checker</summary>
		string SeoChecker { get; }
	}

	/// <summary>SEO Checker</summary>
	[PublishedContentModel("CompositionSeoChecker")]
	public partial class CompositionSeoChecker : PublishedContentModel, ICompositionSeoChecker
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "CompositionSeoChecker";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CompositionSeoChecker(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CompositionSeoChecker, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// #Meta-description: Meta description tags, while not important to search engine rankings, are extremely important in gaining user click-through from SERPs. These short paragraphs are a webmaster’s opportunity to advertise content to searchers and to let them know exactly whether the given page contains the information they're looking for.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return GetMetaDescription(this); }
		}

		/// <summary>Static getter for #Meta-description</summary>
		public static string GetMetaDescription(ICompositionSeoChecker that) { return that.GetPropertyValue<string>("metaDescription"); }

		///<summary>
		/// #Page Title: Title tags—technically called title elements—define the title of a document. Title tags are often used on search engine results pages (SERPs) to display preview snippets for a given page, and are important both for SEO and social sharing.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return GetPageTitle(this); }
		}

		/// <summary>Static getter for #Page Title</summary>
		public static string GetPageTitle(ICompositionSeoChecker that) { return that.GetPropertyValue<string>("pageTitle"); }

		///<summary>
		/// #Checker
		///</summary>
		[ImplementPropertyType("seoChecker")]
		public string SeoChecker
		{
			get { return GetSeoChecker(this); }
		}

		/// <summary>Static getter for #Checker</summary>
		public static string GetSeoChecker(ICompositionSeoChecker that) { return that.GetPropertyValue<string>("seoChecker"); }
	}
}
